<Window x:Class="OptiMate.ScriptWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        x:Name="MainScriptWindow"
       xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:OptiMate"
        xmlns:views="clr-namespace:OptiMate.Views"
        xmlns:viewModels="clr-namespace:OptiMate.ViewModels"
        xmlns:controls="clr-namespace:OptiMate.Controls"
        xmlns:converters="clr-namespace:OptiMate.Converters"
        xmlns:dd="urn:gong-wpf-dragdrop"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=viewModels:ViewModel, IsDesignTimeCreatable=True}"
        Title="NoPAUSE OptiMate (v2.0)" Height="1000" Width="1400" ResizeMode="NoResize">
    <Window.Resources>
        <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" >
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="XAMLDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <converters:isMarginInternal x:Key="isMarginInternal"/>
            <converters:ConvertToOperatorName x:Key="ConvertToOperatorName"/>
            <converters:AvailableOperators x:Key="AvailableOperators"/>
            <converters:ShowRemoveInstructionButtonConverter x:Key="ShowRemoveInstructionButtonConverter"/>
            <converters:ValidNonEmptyParameterToColor x:Key="ValidNonEmptyParameterToColor"/>
            <converters:ValidIntegerParameterToColor x:Key="ValidIntegerParameterToColor"/>
            <converters:InstructionNumberConverter x:Key="InstructionNumberConverter"/>
            <converters:CropVisibilityConverter x:Key="CropVisibilityConverter"/>
            <converters:AsymmetricCropVisibilityConverter x:Key="AsymmetricCropVisibilityConverter"/>
            <converters:MarginVisibilityConverter x:Key="MarginVisibilityConverter"/>
            <converters:AsymmetricMarginVisibilityConverter x:Key="AsymmetricMarginVisibilityConverter"/>
            <converters:BoolToString x:Key="BoolToString"/>
            <converters:InstructionCommandParameterConverter x:Key="InstructionCommandParameterConverter"/>
            <converters:SortStructuresConverter x:Key="SortStructuresConverter"/>
            <converters:AvailableStructureConverter x:Key="AvailableStructureConverter"/>
            <converters:OperatorToTargetVisibility x:Key="OperatorToTargetVisibility"/>
            <converters:TargetStatusToColor x:Key="TargetStatusToColor"/>
            <converters:VisibilityConverter x:Key="VisibilityConverter"/>
            <converters:VisibilityInverseConverter x:Key="VisibilityInverseConverter"/>
            <converters:VisibilityMultiConverter x:Key="VisibilityMultiConverter"/>
        </ResourceDictionary>
    </Window.Resources>
    <Grid KeyDown="KeyDown" Margin="20,0,20,10" IsEnabled="{Binding PopupLock,UpdateSourceTrigger=PropertyChanged}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" Orientation="Horizontal" >
                <TextBlock Text="Current structure set: " FontSize="16" Margin="5,10,0,10"/>
                <TextBlock Text="{Binding CurrentStructureSet, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold"
                           VerticalAlignment="Center" FontSize="16" Foreground="SteelBlue" Margin="10,0,0,0"/>
            </StackPanel>
            <Border Grid.Row="1" Background="Black" Height="2" HorizontalAlignment="Stretch" Margin="0,5,0,10"/>
        </Grid>
        <Grid Grid.Row="1" Margin="0,0,0,10" >
            <Border CornerRadius="5,5,5,5" BorderBrush="CornflowerBlue" BorderThickness="0.5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Border Grid.Row="0" CornerRadius="5,5,0,0" Background="CornflowerBlue" HorizontalAlignment="Stretch" Height="25" Margin="0,0,0,10">
                        <TextBlock Text="Template selection" Margin="10,0,0,0"  Foreground="White" FontSize="14" FontWeight="Bold" VerticalAlignment="Center"/>
                    </Border>
                    <Grid Grid.Row="1" Margin="5,0,5,10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="1" Text="Select template:" FontSize="14" FontWeight="DemiBold" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,6,5,6"/>
                        <ComboBox  Grid.Column="2" Margin="5,4,0,4" VerticalAlignment="Center" HorizontalAlignment="Stretch" MinWidth="200" FontSize="14" Style="{DynamicResource OptiStructureComboBoxStyle}" Template="{DynamicResource OptiComboBoxControlTemplate}" 
                           ItemsSource="{Binding TemplatePointers, UpdateSourceTrigger=PropertyChanged}"  DisplayMemberPath="TemplateDisplayName"
                           SelectedItem="{Binding SelectedTemplate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding CanLoadTemplates, UpdateSourceTrigger=PropertyChanged}">
                        </ComboBox>
                        <Button Grid.Column="3" Margin="10,0,0,0" HorizontalAlignment="Left" Style="{StaticResource ButtonStyle_Medium}" Command="{Binding ReloadTemplateCommand}" Width="Auto" IsEnabled="{Binding CanLoadTemplates, UpdateSourceTrigger=PropertyChanged}">
                            <TextBlock Text="Close template" FontSize="14" FontWeight="DemiBold" Margin="5,0,5,0"/>
                        </Button>
                        <Popup  PlacementTarget="{Binding ElementName=SaveButton}" StaysOpen="False" Placement="Left" HorizontalOffset="0" VerticalOffset="-7" PopupAnimation="Fade"  AllowsTransparency="True" IsOpen="{Binding NewTemplateIdPopupVisibility, UpdateSourceTrigger=PropertyChanged, FallbackValue=True}">
                            <controls:SaveAsTemplateControl MinHeight="35" Height="Auto" Width ="500" DataContext="{Binding SaveTemplateVM, UpdateSourceTrigger=PropertyChanged}"/>
                        </Popup>
                        <Button Grid.Column="4" Margin="10,0,0,0" HorizontalAlignment="Right" Style="{StaticResource ButtonStyle_Medium}" ToolTip="Save current template, including modifications, as a personal template. This does not alter the public template."
                                Command="{Binding SaveAsPersonalCommand}" Width="Auto" IsEnabled="{Binding CanSaveTemplates, UpdateSourceTrigger=PropertyChanged}" Name="SaveButton">
                            <TextBlock Text="Save as personal" FontSize="14" FontWeight="DemiBold" Margin="5,0,5,0"/>
                        </Button>
                        <Border Grid.Column="5" CornerRadius="5,5,5,5" Background="PapayaWhip" Height="30" HorizontalAlignment="Right" Margin="10,0,20,0" ToolTip="View personal templates.">
                            <Button Style="{StaticResource ButtonStyle_Medium}" Width="Auto" Command="{Binding OpenTemplateFolderCommand}" IsEnabled="{Binding CanLoadTemplates, UpdateSourceTrigger=PropertyChanged}">
                                <TextBlock Text="View personal templates" FontSize="14" FontWeight="DemiBold" Margin="5,0,5,0"/>
                            </Button>
                        </Border>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
        <Grid Grid.Row="2" Margin="0,0,0,10">
            <TabControl >
                <TabItem Header="Structure Mapping" >
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="267*"/>
                            <ColumnDefinition Width="782*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Margin="0,5,0,0" Height="25" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="250"/>
                                <ColumnDefinition Width="220"/>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" CornerRadius="5" Background="CornflowerBlue" >
                                <Grid >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock  Text="Template Structure" Foreground="White" FontWeight="Bold" HorizontalAlignment="Center" FontSize="12" VerticalAlignment="Center"/>
                                    <Button Grid.Column="1" Style="{StaticResource ButtonStyle_Small}" Command="{Binding ActiveTemplate.AddTemplateStructureCommand}" Background="PapayaWhip" ToolTip="Add new structure" VerticalAlignment="Center" Margin="10,0,5,0">
                                        <Image Source="Resources/plus_black.png" Stretch="Fill" />
                                    </Button>
                                </Grid>
                            </Border>
                            <Border Grid.Column="1" CornerRadius="5" Background="CornflowerBlue" Margin="5,0,5,0">
                                <TextBlock  Text="Mapped Eclipse Structure" Foreground="White" FontWeight="Bold" HorizontalAlignment="Center" FontSize="12" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                        <Grid Grid.Row="1" Margin="0,5,0,0" Height="25" Grid.ColumnSpan="2">
                            <TextBlock Text="When generating new structures, OptiMate v2.0 uses Template Structures to reference contours in Eclipse for operations. Use the list below to confirm the mapping for this patient/structure set." FontStyle="Italic" FontSize="13" Margin="5,0,0,0"/>
                        </Grid>
                        <Grid Grid.Row="2" Grid.ColumnSpan="2" >
                            <ScrollViewer Margin="0,5,0,5" Focusable="true" VerticalAlignment="Stretch" VerticalScrollBarVisibility="Auto" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel"
                                          Template="{DynamicResource ScrollViewerControlTemplate1}" CanContentScroll="True" Background="Transparent" Visibility="{Binding ProtocolVisibility, UpdateSourceTrigger=PropertyChanged}">
                                <ListView Style="{StaticResource ListViewStyle1}" ItemContainerStyle="{StaticResource DraggableListViewItemStyle}" AlternationCount="2" Name="TemplateStructureListView" SelectedIndex="{Binding ActiveTemplate.SelectedTSIndex}"
                                          ItemsSource="{Binding ActiveTemplate.TemplateStructuresVM, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding CanLoadTemplates, UpdateSourceTrigger=PropertyChanged}" 
                                          MouseDown="TemplateStructures_MouseDown"
                                          MouseLeave="ListView_MouseLeave" 
                                          dd:DragDrop.IsDragSource="True"
                                          DragDrop.Drop="ListView_Drop" 
                                          DragDrop.DragOver="DragTemplateStructure_ListView_DragOver" >
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="250"/>
                                                    <ColumnDefinition Width="200"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid Grid.Column="0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid Grid.Column="0">
                                                        <Popup Visibility="Visible" PlacementTarget="{Binding ElementName=RemoveTemplateStructureButton}" Width="600" StaysOpen="False" Placement="Right" HorizontalOffset="5" AllowsTransparency="True" IsOpen="{Binding ConfirmRemoveStructurePopupVisibility, UpdateSourceTrigger=PropertyChanged}">
                                                            <controls:ConfirmationControl MinHeight="35" Height="Auto" DataContext="{Binding DataContext.ActiveTemplate.ConfirmRemoveTemplateStructureVM, ElementName=MainScriptWindow}" Width="600"/>
                                                        </Popup>
                                                        <Button Style="{StaticResource ButtonStyle_Small}" Command="{Binding DataContext.ActiveTemplate.RemoveTemplateStructureCommand, ElementName=MainScriptWindow}" ToolTip="Remove structure"
                                                                HorizontalAlignment="Left" CommandParameter="{Binding}" VerticalAlignment="Center" Margin="3,0,0,0" Validation.ErrorTemplate="{x:Null}" Name="RemoveTemplateStructureButton">
                                                            <Image Source="Resources/x.png" Stretch="Fill" />
                                                        </Button>
                                                    </Grid>
                                                    <Image Grid.Column="1" Source="Resources/align.png" Height="20" Width="20" RenderOptions.BitmapScalingMode="HighQuality" MouseDown="TemplateStructures_MouseDown"/>
                                                    <Popup Visibility="Visible" PlacementTarget="{Binding ElementName=EditTemplateStructureButton}" StaysOpen="True" Placement="Right" HorizontalOffset="5" AllowsTransparency="True" IsOpen="{Binding EditTemplateStructurePopupVisibility, UpdateSourceTrigger=PropertyChanged}">
                                                        <controls:EditControl MinHeight="35" Height="Auto" DataContext="{Binding EditControlVM}" Width="400"/>
                                                    </Popup>
                                                    <Button Grid.Column="2" Style="{StaticResource ButtonStyle_Small}" Name="EditTemplateStructureButton" Command="{Binding EditTemplateStructureCommand}" CommandParameter="{Binding TemplateStructureId}" ToolTip="Edit template structure">
                                                        <Image  Source="Resources/edit.png" RenderOptions.BitmapScalingMode="HighQuality" Stretch="Fill"/>
                                                    </Button>
                                                    <Grid Grid.Column="3" Margin="10,0,0,0">
                                                        <StackPanel Orientation="Vertical" VerticalAlignment="Center" HorizontalAlignment="Center">
                                                            <StackPanel Orientation="Horizontal">
                                                                <TextBlock Text="{Binding TemplateStructureId}" HorizontalAlignment="Center" FontWeight="DemiBold" FontSize="14" VerticalAlignment="Bottom" Margin="5,0,0,0" />
                                                            </StackPanel>
                                                        </StackPanel>
                                                    </Grid>
                                                </Grid>
                                                <Grid Grid.Column ="1" >
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <ComboBox Grid.Column="0" Margin="10,0,0,0" SelectedItem="{Binding SelectedEclipseStructure, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource OptiStructureComboBoxStyle}"
                                            Template="{DynamicResource OptiComboBoxControlTemplate}" HorizontalAlignment="Center" VerticalAlignment="Center" MinWidth="150" DisplayMemberPath="EclipseId" Background="{Binding MappedStructureWarningColor, UpdateSourceTrigger=PropertyChanged}">
                                                        <ComboBox.ItemsSource>
                                                            <MultiBinding Converter="{StaticResource SortStructuresConverter}">
                                                                <Binding Path="PrincipalAlias"  UpdateSourceTrigger="PropertyChanged" />
                                                                <Binding Path="EclipseIds" UpdateSourceTrigger="PropertyChanged" />
                                                            </MultiBinding>
                                                        </ComboBox.ItemsSource>
                                                        <ComboBox.ItemContainerStyle>
                                                            <Style TargetType="{x:Type ComboBoxItem}">
                                                                <Setter Property="Foreground" Value="{Binding EclipseIdColor, UpdateSourceTrigger=PropertyChanged}"/>
                                                            </Style>
                                                        </ComboBox.ItemContainerStyle>
                                                    </ComboBox>
                                                    <controls:WarningControl Grid.Column="1" Height="24" Width="25" Margin="3,0,0,0" Padding="2,2,2,2" ToolTip="Mapping has been modified." Visibility="{Binding WarningVisibilityDoesNotUseAlias, UpdateSourceTrigger=PropertyChanged}"/>
                                                    <controls:WarningControl Grid.Column="1" Height="24" Width="25" Margin="3,0,0,0" Padding="2,2,2,2" ToolTip="Mapped structure is empty" Visibility="{Binding WarningVisibilityMappedStructureEmpty, UpdateSourceTrigger=PropertyChanged}"/>
                                                </Grid>
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </ScrollViewer>
                        </Grid>
                    </Grid>
                </TabItem>
                <TabItem Header="Generated Structures" Height="34" VerticalAlignment="Bottom" HorizontalAlignment="Center" Width="151">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid Grid.Row="0" Margin="0,5,0,0" Visibility="{Binding ProtocolVisibility, UpdateSourceTrigger=PropertyChanged}" Height="25" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="220"/>
                                <ColumnDefinition Width="220"/>
                                <ColumnDefinition Width="170"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" CornerRadius="5" Background="CornflowerBlue">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Column="0" Text="Generated Structure" Foreground="White" FontWeight="Bold" HorizontalAlignment="Center" FontSize="12" VerticalAlignment="Center"/>
                                    <Button Grid.Column="1" Style="{StaticResource ButtonStyle_Small}" Command="{Binding ActiveTemplate.AddGeneratedStructureCommand}" Background="PapayaWhip" ToolTip="Add new structure" VerticalAlignment="Center" Margin="0,0,5,0">
                                        <Image Source="Resources/plus_black.png" Stretch="Fill" />
                                    </Button>
                                </Grid>
                            </Border>
                            <Border Grid.Column="1" CornerRadius="5" Background="CornflowerBlue" Margin="5,0,5,0">
                                <TextBlock Text="Operator" Foreground="White" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <Border Grid.Column="2" CornerRadius="5" Background="CornflowerBlue" Margin="5,0,5,0">
                                <TextBlock Text="Template Structure" Foreground="White"  FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <Border Grid.Column="3" CornerRadius="5" Background="CornflowerBlue" Margin="5,0,5,0">
                                <TextBlock Text="Operator Options" Foreground="White" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                        <Grid Grid.Row="1" Visibility="{Binding ProtocolVisibility, UpdateSourceTrigger=PropertyChanged}">
                            <ScrollViewer Margin="0,0,0,0" Focusable="true" VerticalAlignment="Stretch" VerticalScrollBarVisibility="Auto" PreviewMouseWheel="ScrollViewer_PreviewMouseWheel"
                                          Template="{DynamicResource ScrollViewerControlTemplate1}" CanContentScroll="True" Background="Transparent" Visibility="{Binding ProtocolVisibility, UpdateSourceTrigger=PropertyChanged}">
                                <ListView Style="{StaticResource ListViewStyle1}" ItemContainerStyle="{StaticResource DraggableListViewItemStyle}" AlternationCount="2" Name="GenStructureListView" SelectedIndex="{Binding ActiveTemplate.SelectedGSIndex}"
                                          ItemsSource="{Binding ActiveTemplate.GeneratedStructuresVM, UpdateSourceTrigger=PropertyChanged}" IsEnabled="{Binding CanLoadTemplates, UpdateSourceTrigger=PropertyChanged}"
                                           MouseDown="GenStructures_MouseDown"
                                           MouseLeave="ListView_MouseLeave" 
                                          dd:DragDrop.IsDragSource="True"
                                          DragDrop.Drop="ListView_Drop" 
                                          DragDrop.DragOver="DragGenStructure_ListView_DragOver" >
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="220"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Grid Grid.Column="0">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid Grid.Column="0">
                                                        <Popup Visibility="Visible" PlacementTarget="{Binding ElementName=RemoveGeneratedStructureButton}" Width="600" StaysOpen="False" Placement="Right" HorizontalOffset="5" AllowsTransparency="True" IsOpen="{Binding ConfirmRemoveStructurePopupVisibility, UpdateSourceTrigger=PropertyChanged}">
                                                            <controls:ConfirmationControl MinHeight="35" Height="Auto" DataContext="{Binding DataContext.ActiveTemplate.ConfirmRemoveGeneratedStructureVM, ElementName=MainScriptWindow}" Width="600"/>
                                                        </Popup>
                                                        <Button Style="{StaticResource ButtonStyle_Small}" Command="{Binding DataContext.ActiveTemplate.ConfirmRemoveGeneratedStructureCommand, ElementName=MainScriptWindow}" 
                                                                ToolTip="Remove structure" Name="RemoveGeneratedStructureButton"
                                                               HorizontalAlignment="Left" CommandParameter="{Binding}" VerticalAlignment="Center" Margin="3,0,0,0">
                                                            <Image Source="Resources/x.png" Stretch="Fill" />
                                                        </Button>
                                                    </Grid>
                                                    <Image Grid.Column="1" Source="Resources/align.png" Height="20" Width="20" RenderOptions.BitmapScalingMode="HighQuality" MouseDown="GenStructures_MouseDown"/>
                                                    <Button Grid.Column="2" Style="{StaticResource ButtonStyle_Small}" Command="{Binding EditGenStructureCommand}" ToolTip="Edit generated structure">
                                                        <Image  Source="Resources/edit.png" RenderOptions.BitmapScalingMode="HighQuality" Stretch="Fill"/>
                                                    </Button>
                                                    <Grid Grid.Column="3" Margin="10,0,0,0">
                                                        <StackPanel Orientation="Horizontal"  VerticalAlignment="Center" HorizontalAlignment="Center">
                                                            <TextBlock Text="{Binding StructureId}" HorizontalAlignment="Center" VerticalAlignment="Bottom" FontWeight="bold" FontSize="14" Margin="5,0,0,0"
                                             Visibility="{Binding EditMode, Converter={StaticResource VisibilityInverseConverter}}"/>
                                                            <TextBox Text="{Binding StructureId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="5,0,0,0" HorizontalAlignment="Center" HorizontalContentAlignment="Center" FontWeight="bold" FontSize="14" VerticalAlignment="Bottom" MinWidth="130" MaxWidth="130"
                                             Visibility="{Binding EditMode, Converter={StaticResource VisibilityConverter}}" Background="{Binding StructureIdColor, UpdateSourceTrigger=PropertyChanged,FallbackValue=Orange}"/>
                                                        </StackPanel>
                                                    </Grid>
                                                </Grid>
                                                <Grid Grid.Column="1" >
                                                    <ListView Style="{StaticResource ListViewStyle1}" ItemContainerStyle="{StaticResource DraggableListViewItemStyle}" 
                                            ItemsSource="{Binding InstructionViewModels, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" HorizontalAlignment="Left">
                                                        <ListView.ItemTemplate>
                                                            <DataTemplate>
                                                                <Grid Background="Transparent" Margin="10,3,0,3">
                                                                    <Grid.ColumnDefinitions>
                                                                        <ColumnDefinition Width="200"/>
                                                                        <ColumnDefinition Width="170"/>
                                                                        <ColumnDefinition Width="*"/>
                                                                    </Grid.ColumnDefinitions>
                                                                    <Grid Grid.Column="0" >
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="*"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <TextBlock Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,-3,0,0" ToolTip="Instructions execute in this order" Validation.ErrorTemplate="{x:Null}">
                                                                            <TextBlock.Text>
                                                                                <MultiBinding Converter="{StaticResource InstructionNumberConverter}" UpdateSourceTrigger="PropertyChanged">
                                                                                    <Binding/>
                                                                                    <Binding Path="DataContext.InstructionViewModels" UpdateSourceTrigger="PropertyChanged">
                                                                                        <Binding.RelativeSource>
                                                                                            <RelativeSource Mode="FindAncestor" AncestorType="ListView" />
                                                                                        </Binding.RelativeSource>
                                                                                    </Binding>
                                                                                </MultiBinding>
                                                                            </TextBlock.Text>
                                                                        </TextBlock>
                                                                        <StackPanel Grid.Column="1" Orientation="Horizontal">
                                                                            <ComboBox Grid.Column="1" SelectedItem="{Binding SelectedOperator, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Template="{DynamicResource OptiComboBoxControlTemplate}" Background="{Binding OperatorBackgroundColor, UpdateSourceTrigger=PropertyChanged}" Style="{DynamicResource OptiStructureComboBoxStyle}"
                                                                                      HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,0">
                                                                                <ComboBox.ItemTemplate>
                                                                                    <DataTemplate>
                                                                                        <TextBlock Text="{Binding Converter={StaticResource ConvertToOperatorName}}" />
                                                                                    </DataTemplate>
                                                                                </ComboBox.ItemTemplate>
                                                                                <ComboBox.ItemsSource>
                                                                                    <MultiBinding Converter="{StaticResource AvailableOperators}">
                                                                                        <Binding Path="Operators" UpdateSourceTrigger="PropertyChanged" />
                                                                                        <Binding Path="DataContext" RelativeSource="{RelativeSource AncestorLevel=2, AncestorType=ListViewItem}" UpdateSourceTrigger="PropertyChanged" />
                                                                                        <Binding/>
                                                                                    </MultiBinding>
                                                                                </ComboBox.ItemsSource>
                                                                            </ComboBox>
                                                                            <controls:WarningControl Grid.Column="2" Visibility="{Binding WarningVisibility_OperatorChanged}" Height="24" Width="25" Margin="3,0,0,0" Padding="2,2,2,2" ToolTip="Instruction is new or has been modified"/>
                                                                        </StackPanel>


                                                                        <Button Grid.Column="2" Style="{StaticResource ButtonStyle_Small}" Command="{Binding DataContext.RemoveInstructionCommand, RelativeSource={RelativeSource AncestorLevel=2, AncestorType=ListViewItem}}" ToolTip="Remove instruction"
                                                              HorizontalAlignment="Right" Visibility="{Binding DeleteButtonVisibiilty, UpdateSourceTrigger=PropertyChanged}" Validation.ErrorTemplate="{x:Null}">
                                                                            <Button.CommandParameter>
                                                                                <MultiBinding Converter="{StaticResource InstructionCommandParameterConverter}">
                                                                                    <Binding/>
                                                                                    <Binding Path="DataContext">
                                                                                        <Binding.RelativeSource>
                                                                                            <RelativeSource Mode="FindAncestor" AncestorType="ListViewItem" AncestorLevel="2"/>
                                                                                        </Binding.RelativeSource>
                                                                                    </Binding>
                                                                                </MultiBinding>
                                                                            </Button.CommandParameter>
                                                                            <Image Source="Resources/x.png" Stretch="Fill" />
                                                                        </Button>
                                                                        <Button Grid.Column="3" Style="{StaticResource ButtonStyle_Small}" Command="{Binding DataContext.AddInstructionCommand, RelativeSource={RelativeSource AncestorLevel=2, AncestorType=ListViewItem}}" ToolTip="Add new instruction following"
                                                               HorizontalAlignment="Right"  Margin="0,0,0,0" Validation.ErrorTemplate="{x:Null}">
                                                                            <Button.CommandParameter>
                                                                                <MultiBinding Converter="{StaticResource InstructionCommandParameterConverter}">
                                                                                    <Binding/>
                                                                                    <Binding Path="DataContext">
                                                                                        <Binding.RelativeSource>
                                                                                            <RelativeSource Mode="FindAncestor" AncestorType="ListViewItem" AncestorLevel="2"/>
                                                                                        </Binding.RelativeSource>
                                                                                    </Binding>
                                                                                </MultiBinding>
                                                                            </Button.CommandParameter>
                                                                            <TextBlock Text="..." />
                                                                        </Button>
                                                                    </Grid>
                                                                    <StackPanel Grid.Column="1" HorizontalAlignment="Stretch"  Margin="10,0,0,0" Orientation="Horizontal" Visibility="{Binding VisibilityTargetSelection, UpdateSourceTrigger=PropertyChanged}">
                                                                        <ComboBox ToolTip="{Binding DefaultTemplateStructureId, UpdateSourceTrigger=PropertyChanged}" Background="{Binding TargetTemplateBackgroundColor, UpdateSourceTrigger=PropertyChanged}"
                                                                              ItemsSource="{Binding TargetTemplateIds}" Template="{StaticResource OptiComboBoxControlTemplate}"  Style="{StaticResource OptiStructureComboBoxStyle}"  PreviewMouseWheel="ScrollViewer_PreviewMouseWheel" SelectedItem="{Binding TargetTemplateStructureId, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Center" HorizontalContentAlignment="Center"  VerticalContentAlignment="Center" Margin="0,0,0,0" VerticalAlignment="Center">
                                                                        </ComboBox>
                                                                        <controls:WarningControl Visibility="{Binding WarningVisibility_TargetChanged}" Height="24" Width="25" Margin="3,0,0,0" Padding="2,2,2,2" ToolTip="Template target has changed" HorizontalAlignment="Left"/>
                                                                    </StackPanel>
                                                                    <Grid Grid.Column="2" Margin="10,0,0,0" Visibility="{Binding SelectedOperator, Converter={StaticResource AsymmetricMarginVisibilityConverter}}">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <Border  Width="70" Grid.Column="0" Margin="5,1,5,1" BorderBrush="LightSteelBlue" Background="LightGoldenrodYellow" BorderThickness="1" HorizontalAlignment="Center" CornerRadius="5,5,5,5">
                                                                            <StackPanel Orientation="Vertical">
                                                                                <Border Background="LightSteelBlue" HorizontalAlignment="Stretch" CornerRadius="5,5,0,0">
                                                                                    <TextBlock Text="Right (mm)" Margin="0,2,0,2" HorizontalAlignment="Center" ToolTip="This is used as the default for all directions which are not explicitly defined by the user. &#x0a;If this is negative, an internal margin is applied. Internal margins must be uniform."/>
                                                                                </Border>
                                                                                <TextBox Style="{StaticResource TextBoxStyle2}"  Width="50" Margin="0,3,0,2" HorizontalAlignment="Center" HorizontalContentAlignment="Center"  
                                                                                         Text="{Binding RightMargin, UpdateSourceTrigger=PropertyChanged}" />
                                                                            </StackPanel>
                                                                        </Border>
                                                                        <Border  Width="70" Grid.Column="1" Margin="5,1,5,1" BorderBrush="LightSteelBlue" Background="LightGoldenrodYellow" BorderThickness="1" HorizontalAlignment="Center" CornerRadius="5,5,5,5">
                                                                            <StackPanel Orientation="Vertical">
                                                                                <Border Background="LightSteelBlue" HorizontalAlignment="Stretch" CornerRadius="5,5,0,0">
                                                                                    <TextBlock Text="Left (mm)" Margin="0,2,0,2" HorizontalAlignment="Center" ToolTip="This is used as the default for all directions which are not explicitly defined by the user. &#x0a;If this is negative, an internal margin is applied. Internal margins must be uniform."/>
                                                                                </Border>
                                                                                <TextBox Text="{Binding LeftMargin, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle2}"  Width="50" Margin="0,3,0,2" HorizontalAlignment="Center" HorizontalContentAlignment="Center"/>
                                                                            </StackPanel>
                                                                        </Border>
                                                                        <Border Width="70" Grid.Column="2" Margin="5,1,5,1" BorderBrush="LightSteelBlue" Background="LightGoldenrodYellow" BorderThickness="1" HorizontalAlignment="Center" CornerRadius="5,5,5,5">
                                                                            <StackPanel Orientation="Vertical">
                                                                                <Border Background="LightSteelBlue" HorizontalAlignment="Stretch" CornerRadius="5,5,0,0">
                                                                                    <TextBlock Text="Ant (mm)" Margin="0,2,0,2" HorizontalAlignment="Center" ToolTip="This is used as the default for all directions which are not explicitly defined by the user. &#x0a;If this is negative, an internal margin is applied. Internal margins must be uniform."/>
                                                                                </Border>
                                                                                <TextBox Text="{Binding AntMargin, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle2}"  Width="50" Margin="0,3,0,2" HorizontalAlignment="Center" HorizontalContentAlignment="Center" />
                                                                            </StackPanel>
                                                                        </Border>
                                                                        <Border  Width="70" Grid.Column="3" Margin="5,1,5,1" BorderBrush="LightSteelBlue" Background="LightGoldenrodYellow" BorderThickness="1" HorizontalAlignment="Center" CornerRadius="5,5,5,5">
                                                                            <StackPanel Orientation="Vertical">
                                                                                <Border Background="LightSteelBlue" HorizontalAlignment="Stretch" CornerRadius="5,5,0,0">
                                                                                    <TextBlock Text="Post (mm)" Margin="0,2,0,2" HorizontalAlignment="Center" ToolTip="This is used as the default for all directions which are not explicitly defined by the user. &#x0a;If this is negative, an internal margin is applied. Internal margins must be uniform."/>
                                                                                </Border>
                                                                                <TextBox Text="{Binding PostMargin, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle2}"  Width="50" Margin="0,3,0,2" HorizontalAlignment="Center" HorizontalContentAlignment="Center"/>
                                                                            </StackPanel>
                                                                        </Border>
                                                                        <Border Width="70" Grid.Column="4" Margin="5,1,5,1" BorderBrush="LightSteelBlue" Background="LightGoldenrodYellow" BorderThickness="1" HorizontalAlignment="Center" CornerRadius="5,5,5,5">
                                                                            <StackPanel Orientation="Vertical">
                                                                                <Border Background="LightSteelBlue" HorizontalAlignment="Stretch" CornerRadius="5,5,0,0">
                                                                                    <TextBlock Text="Sup (mm)" Margin="0,2,0,2" HorizontalAlignment="Center" ToolTip="This is used as the default for all directions which are not explicitly defined by the user. &#x0a;If this is negative, an internal margin is applied. Internal margins must be uniform."/>
                                                                                </Border>
                                                                                <TextBox Text="{Binding SupMargin, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle2}"  Width="50" Margin="0,3,0,2" HorizontalAlignment="Center" HorizontalContentAlignment="Center" />
                                                                            </StackPanel>
                                                                        </Border>
                                                                        <Border  Width="70" Grid.Column="5" Margin="5,1,5,1" BorderBrush="LightSteelBlue" Background="LightGoldenrodYellow" BorderThickness="1" HorizontalAlignment="Center" CornerRadius="5,5,5,5">
                                                                            <StackPanel Orientation="Vertical">
                                                                                <Border Background="LightSteelBlue" HorizontalAlignment="Stretch" CornerRadius="5,5,0,0">
                                                                                    <TextBlock Text="Inf (mm)" Margin="0,2,0,2" HorizontalAlignment="Center" ToolTip="This is used as the default for all directions which are not explicitly defined by the user. &#x0a;If this is negative, an internal margin is applied. Internal margins must be uniform."/>
                                                                                </Border>
                                                                                <TextBox Text="{Binding InfMargin, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle2}"  Width="50" Margin="0,3,0,2" HorizontalAlignment="Center" HorizontalContentAlignment="Center" />
                                                                            </StackPanel>
                                                                        </Border>
                                                                        <Border Width="90" Grid.Column="6" Margin="5,1,5,1" BorderBrush="LightSteelBlue" Background="LightGoldenrodYellow" BorderThickness="1" HorizontalAlignment="Center" CornerRadius="5,5,5,5">
                                                                            <StackPanel Orientation="Vertical">
                                                                                <Border Background="LightSteelBlue" HorizontalAlignment="Stretch" CornerRadius="5,5,0,0">
                                                                                    <TextBlock Text="Margin Type" Margin="0,2,0,2" HorizontalAlignment="Center" ToolTip="Outer expands the structure by the margin value, Inner shrinks the structure."/>
                                                                                </Border>
                                                                                <ComboBox SelectedItem="{Binding SelectedMargin, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding MarginTypeOptions}" Style="{StaticResource OptiStructureComboBoxStyle2}" Template="{StaticResource OptiComboBoxControlTemplate}" Grid.Row="1" Width="70" Margin="0,2,0,2" Grid.Column="6" HorizontalAlignment="Center" HorizontalContentAlignment="Center"
          />
                                                                            </StackPanel>
                                                                        </Border>
                                                                    </Grid>
                                                                    <Grid Grid.Column="2" Visibility="{Binding SelectedOperator, Converter={StaticResource CropVisibilityConverter}}">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <Border Width="100" Grid.Column="0" Margin="5,1,5,1" BorderBrush="LightSteelBlue" Background="LightGoldenrodYellow" BorderThickness="1" HorizontalAlignment="Center" CornerRadius="5,5,5,5">
                                                                            <StackPanel Orientation="Vertical">
                                                                                <Border Background="LightSteelBlue" HorizontalAlignment="Stretch" CornerRadius="5,5,0,0">
                                                                                    <TextBlock Text="Iso. Offset (mm)" Margin="0,2,0,2" HorizontalAlignment="Center" ToolTip="This is used as the default for all directions which are not explicitly defined by the user. &#x0a;If this is negative, an internal margin is applied. Internal margins must be uniform."/>
                                                                                </Border>
                                                                                <TextBox Text="{Binding IsoCropOffset, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle2}"  Width="50" Margin="0,3,0,2" HorizontalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                                                                            </StackPanel>
                                                                        </Border>
                                                                        <Border Width="90" Grid.Column="1" Margin="5,1,5,1" BorderBrush="LightSteelBlue" Background="LightGoldenrodYellow" BorderThickness="1" HorizontalAlignment="Center" CornerRadius="5,5,5,5">
                                                                            <StackPanel Orientation="Vertical">
                                                                                <Border Background="LightSteelBlue" HorizontalAlignment="Stretch" CornerRadius="5,5,0,0">
                                                                                    <TextBlock Text="Internal Crop" Margin="0,2,0,2" HorizontalAlignment="Center" ToolTip="This is used as the default for all directions which are not explicitly defined by the user. &#x0a;If this is negative, an internal margin is applied. Internal margins must be uniform."/>
                                                                                </Border>
                                                                                <CheckBox IsChecked="{Binding InternalCrop, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle1}" HorizontalAlignment="Center" Margin="5,5,0,0" Width="25" VerticalAlignment="Center" HorizontalContentAlignment="Center" />
                                                                            </StackPanel>
                                                                        </Border>
                                                                    </Grid>
                                                                    <Grid Grid.Column="2" Visibility="{Binding SelectedOperator, Converter={StaticResource MarginVisibilityConverter}}">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <Border Width="100" Grid.Column="0" Margin="5,1,5,1" BorderBrush="LightSteelBlue" Background="LightGoldenrodYellow" BorderThickness="1" HorizontalAlignment="Center" CornerRadius="5,5,5,5">
                                                                            <StackPanel Orientation="Vertical">
                                                                                <Border Background="LightSteelBlue" HorizontalAlignment="Stretch" CornerRadius="5,5,0,0">
                                                                                    <TextBlock Text="Margin (mm)" Margin="0,2,0,2" HorizontalAlignment="Center" ToolTip="Value for the margin in mm."/>
                                                                                </Border>
                                                                                <TextBox Text="{Binding IsoMargin, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle2}"  Width="50" Margin="0,3,0,2" HorizontalAlignment="Center" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" />
                                                                            </StackPanel>
                                                                        </Border>
                                                                        <Border Width="90" Grid.Column="1" Margin="5,1,5,1" BorderBrush="LightSteelBlue" Background="LightGoldenrodYellow" BorderThickness="1" HorizontalAlignment="Center" CornerRadius="5,5,5,5">
                                                                            <StackPanel Orientation="Vertical">
                                                                                <Border Background="LightSteelBlue" HorizontalAlignment="Stretch" CornerRadius="5,5,0,0">
                                                                                    <TextBlock Text="Margin Type" Margin="0,2,0,2" HorizontalAlignment="Center" ToolTip="Outer expands the structure by the margin value, Inner shrinks the structure."/>
                                                                                </Border>
                                                                                <ComboBox SelectedItem="{Binding SelectedMargin, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding MarginTypeOptions}" Style="{StaticResource OptiStructureComboBoxStyle2}" Template="{StaticResource OptiComboBoxControlTemplate}" Grid.Row="1" Width="70" Margin="0,2,0,2" Grid.Column="6" HorizontalAlignment="Center" HorizontalContentAlignment="Center"
/>
                                                                            </StackPanel>
                                                                        </Border>
                                                                    </Grid>
                                                                    <Grid Grid.Column="2" Visibility="{Binding SelectedOperator, Converter={StaticResource AsymmetricCropVisibilityConverter}}">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                            <ColumnDefinition Width="Auto"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <Border  Width="70" Grid.Column="0" Margin="5,1,5,1" BorderBrush="LightSteelBlue" Background="LightGoldenrodYellow" BorderThickness="1" HorizontalAlignment="Center" CornerRadius="5,5,5,5">
                                                                            <StackPanel Orientation="Vertical">
                                                                                <Border Background="LightSteelBlue" HorizontalAlignment="Stretch" CornerRadius="5,5,0,0">
                                                                                    <TextBlock Text="Right (mm)" Margin="0,2,0,2" HorizontalAlignment="Center" ToolTip="This is the additional offset from this side of the cropped structure."/>
                                                                                </Border>
                                                                                <TextBox Style="{StaticResource TextBoxStyle2}"  Width="50" Margin="0,3,0,2" HorizontalAlignment="Center" HorizontalContentAlignment="Center"  
                                                                               Text="{Binding RightCropOffset, UpdateSourceTrigger=PropertyChanged}" />
                                                                            </StackPanel>
                                                                        </Border>
                                                                        <Border  Width="70" Grid.Column="1" Margin="5,1,5,1" BorderBrush="LightSteelBlue" Background="LightGoldenrodYellow" BorderThickness="1" HorizontalAlignment="Center" CornerRadius="5,5,5,5">
                                                                            <StackPanel Orientation="Vertical">
                                                                                <Border Background="LightSteelBlue" HorizontalAlignment="Stretch" CornerRadius="5,5,0,0">
                                                                                    <TextBlock Text="Left (mm)" Margin="0,2,0,2" HorizontalAlignment="Center" ToolTip="This is the additional offset from this side of the cropped structure."/>
                                                                                </Border>
                                                                                <TextBox Text="{Binding LeftCropOffset, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle2}"  Width="50" Margin="0,3,0,2" HorizontalAlignment="Center" HorizontalContentAlignment="Center"/>
                                                                            </StackPanel>
                                                                        </Border>
                                                                        <Border Width="70" Grid.Column="2" Margin="5,1,5,1" BorderBrush="LightSteelBlue" Background="LightGoldenrodYellow" BorderThickness="1" HorizontalAlignment="Center" CornerRadius="5,5,5,5">
                                                                            <StackPanel Orientation="Vertical">
                                                                                <Border Background="LightSteelBlue" HorizontalAlignment="Stretch" CornerRadius="5,5,0,0">
                                                                                    <TextBlock Text="Ant (mm)" Margin="0,2,0,2" HorizontalAlignment="Center" ToolTip="This is the additional offset from this side of the cropped structure."/>
                                                                                </Border>
                                                                                <TextBox Text="{Binding AntCropOffset, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle2}"  Width="50" Margin="0,3,0,2" HorizontalAlignment="Center" HorizontalContentAlignment="Center" />
                                                                            </StackPanel>
                                                                        </Border>
                                                                        <Border  Width="70" Grid.Column="3" Margin="5,1,5,1" BorderBrush="LightSteelBlue" Background="LightGoldenrodYellow" BorderThickness="1" HorizontalAlignment="Center" CornerRadius="5,5,5,5">
                                                                            <StackPanel Orientation="Vertical">
                                                                                <Border Background="LightSteelBlue" HorizontalAlignment="Stretch" CornerRadius="5,5,0,0">
                                                                                    <TextBlock Text="Post (mm)" Margin="0,2,0,2" HorizontalAlignment="Center" ToolTip="This is the additional offset from this side of the cropped structure."/>
                                                                                </Border>
                                                                                <TextBox Text="{Binding PostCropOffset, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle2}"  Width="50" Margin="0,3,0,2" HorizontalAlignment="Center" HorizontalContentAlignment="Center"/>
                                                                            </StackPanel>
                                                                        </Border>
                                                                        <Border Width="70" Grid.Column="4" Margin="5,1,5,1" BorderBrush="LightSteelBlue" Background="LightGoldenrodYellow" BorderThickness="1" HorizontalAlignment="Center" CornerRadius="5,5,5,5">
                                                                            <StackPanel Orientation="Vertical">
                                                                                <Border Background="LightSteelBlue" HorizontalAlignment="Stretch" CornerRadius="5,5,0,0">
                                                                                    <TextBlock Text="Sup (mm)" Margin="0,2,0,2" HorizontalAlignment="Center" ToolTip="This is the additional offset from this side of the cropped structure."/>
                                                                                </Border>
                                                                                <TextBox Text="{Binding SupCropOffset, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle2}"  Width="50" Margin="0,3,0,2" HorizontalAlignment="Center" HorizontalContentAlignment="Center" />
                                                                            </StackPanel>
                                                                        </Border>
                                                                        <Border  Width="70" Grid.Column="5" Margin="5,1,5,1" BorderBrush="LightSteelBlue" Background="LightGoldenrodYellow" BorderThickness="1" HorizontalAlignment="Center" CornerRadius="5,5,5,5">
                                                                            <StackPanel Orientation="Vertical">
                                                                                <Border Background="LightSteelBlue" HorizontalAlignment="Stretch" CornerRadius="5,5,0,0">
                                                                                    <TextBlock Text="Inf (mm)" Margin="0,2,0,2" HorizontalAlignment="Center" ToolTip="This is the additional offset from this side of the cropped structure."/>
                                                                                </Border>
                                                                                <TextBox Text="{Binding InfCropOffset, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle2}"  Width="50" Margin="0,3,0,2" HorizontalAlignment="Center" HorizontalContentAlignment="Center" />
                                                                            </StackPanel>
                                                                        </Border>
                                                                        <Border Width="90" Grid.Column="6" Margin="5,1,5,1" BorderBrush="LightSteelBlue" Background="LightGoldenrodYellow" BorderThickness="1" HorizontalAlignment="Center" CornerRadius="5,5,5,5">
                                                                            <StackPanel Orientation="Vertical">
                                                                                <Border Background="LightSteelBlue" HorizontalAlignment="Stretch" CornerRadius="5,5,0,0">
                                                                                    <TextBlock Text="Internal Crop" Margin="0,2,0,2" HorizontalAlignment="Center" ToolTip="This is used as the default for all directions which are not explicitly defined by the user. &#x0a;If this is negative, an internal margin is applied. Internal margins must be uniform."/>
                                                                                </Border>
                                                                                <CheckBox IsChecked="{Binding InternalCrop, Mode=TwoWay}" Style="{StaticResource CheckBoxStyle1}" HorizontalAlignment="Center" Margin="5,5,0,0" Width="25" VerticalAlignment="Center" HorizontalContentAlignment="Center" />
                                                                            </StackPanel>
                                                                        </Border>
                                                                    </Grid>
                                                                </Grid>
                                                            </DataTemplate>
                                                        </ListView.ItemTemplate>
                                                    </ListView>

                                                </Grid>
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </ScrollViewer>
                        </Grid>
                    </Grid>
                </TabItem>
            </TabControl>
        </Grid>
        <Grid Grid.Row="3" Margin="0,0,0,0"  VerticalAlignment="Center" Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <ProgressBar Name="ProgressBar" Height="30" Margin="30,0,30,0" HorizontalAlignment="Stretch" Template="{StaticResource ProgressBarNC}" IsIndeterminate="True" 
                Visibility="{Binding Working,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}" />
                <TextBlock Text="{Binding WaitMessage, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" HorizontalAlignment="Center" 
                           Visibility="{Binding Working,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}" />
            </Grid>
            <Grid Grid.Column="0" Visibility="{Binding Working,UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityInverseConverter}}" HorizontalAlignment="Center">
                <Popup Visibility="Visible" PlacementTarget="{Binding ElementName=WarningsButton}" Width="800" StaysOpen="False" Placement="Top" HorizontalOffset="-100" AllowsTransparency="True" IsOpen="{Binding ReviewWarningsPopupVisibility, UpdateSourceTrigger=PropertyChanged, FallbackValue=True}">
                    <views:DescriptionView MinHeight="35" Height="Auto" DataContext="{Binding ReviewWarningsVM}" Width="800"/>
                </Popup>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding StatusMessage}" Background="Transparent" Visibility="{Binding StatusMessageVisibility, Converter={StaticResource VisibilityConverter}}"
                    Foreground="Black"  FontSize="13" FontWeight="Bold" VerticalAlignment="Center" HorizontalAlignment="Center" Name="WarningsButton"/>
                    <Button Command="{Binding ShowWarningsCommand}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="5,0,0,5" Background="Transparent" Style="{StaticResource ButtonStyle_Fit}" BorderBrush="{Binding StatusBorderColor}" BorderThickness="5" 
                            Visibility="{Binding HasWarnings, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource VisibilityConverter}}">
                        <controls:WarningControl Width="20" Height="20" />
                    </Button>
                </StackPanel>
            </Grid>
            <Grid Grid.Column="1">
                <Button HorizontalAlignment="Center" Style="{StaticResource ButtonStyle_Highlight}" Width="175" Command="{Binding StartCommand}" 
                        IsEnabled="{Binding AllInputsValid, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" Margin="2,1,2,1" Validation.ErrorTemplate="{x:Null}">
                    <TextBlock Text="{Binding StartButtonText, UpdateSourceTrigger=PropertyChanged}" FontSize="16" FontWeight="bold"/>
                </Button>
            </Grid>
        </Grid>
    </Grid>
</Window>

    